{"version":3,"file":"static/js/683.ba5d91e4.chunk.js","mappings":"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","sources":["services/AdminPanel/teacher_schedule/BookingForm/BookingForm.js","services/AdminPanel/teacher_schedule/EditBookingForm/EditBookingForm.js"],"sourcesContent":["import React from 'react';\r\nimport './BookingForm.css'; // Import the CSS file\r\n\r\nfunction BookingForm({ booking, handleChange, handleAddWorkTime, handleRemoveWorkTime, handleSubmit, id }) {\r\n  const formatDateTimeLocal = (dateTimeString) => {\r\n    if (!dateTimeString) return '';\r\n    const date = new Date(dateTimeString);\r\n    // Convert to local time, remove seconds and milliseconds for input value\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"booking-form-container\">\r\n      <h1 className=\"form-title\">{id ? 'Edit Booking' : 'Create Booking'}</h1>\r\n      <form onSubmit={handleSubmit} className=\"booking-form\">\r\n        <label className=\"form-label\">\r\n          Date:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"date\"\r\n            name=\"d\"\r\n            value={booking.d ? booking.d.split('T')[0] : ''}\r\n            onChange={(e) => handleChange(e, null)}\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          All Number:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"number\"\r\n            name=\"allSlots\"\r\n            value={booking.allSlots || 0}\r\n            onChange={(e) => handleChange(e, null)}\r\n            required\r\n          />\r\n        </label>\r\n        <div className=\"worktime-section\">\r\n          <h2 className=\"worktime-title\">Work Times</h2>\r\n          {booking.workTime && booking.workTime.map((item, index) => (\r\n            <div key={index} className=\"worktime-item\">\r\n              <label className=\"form-label\">\r\n                Time:\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"datetime-local\"\r\n                  name=\"time\"\r\n                  value={formatDateTimeLocal(item.time)}\r\n                  onChange={(e) => handleChange(e, index)}\r\n                  required\r\n                />\r\n              </label>\r\n              <label className=\"form-label\">\r\n                Number:\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  name=\"slots\"\r\n                  value={item.slots || 0}\r\n                  onChange={(e) => handleChange(e, index)}\r\n                  required\r\n                />\r\n              </label>\r\n              <button type=\"button\" className=\"remove-btn\" onClick={() => handleRemoveWorkTime(index)}>\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" className=\"add-btn\" onClick={handleAddWorkTime}>\r\n            Add Work Time\r\n          </button>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">{id ? 'Update' : 'Create'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport BookingForm from '../BookingForm/BookingForm';\r\n\r\nfunction EditBookingForm() {\r\n  const [booking, setBooking] = useState({ d: '', allNr: 0, workTime: [] });\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { date } = location.state || {};\r\n  const { lang } = location.state || {};\r\n  const { level } = location.state || {};\r\n  const { teacherId } = location.state || {};\r\n  const { lessonTypes } = location.state || {};\r\n  const { schoolId } = location.state || {};\r\n  \r\n  useEffect(() => {\r\n    if (id) {\r\n      async function fetchBooking() {\r\n        try {\r\n          console.log('Fetching booking with ID:', id);\r\n  \r\n          // Преобразуем время в локальное время\r\n          const normalizedBooking = {\r\n            ...date,\r\n            workTime: date.workTime.map(item => ({\r\n              ...item,\r\n              time: new Date(item.time).toISOString().slice(0, 16) // Приводим к формату 'yyyy-MM-ddTHH:mm'\r\n            }))\r\n          };\r\n  \r\n          // Устанавливаем преобразованное время\r\n          setBooking(normalizedBooking);\r\n          console.log('Fetched booking with normalized time:', normalizedBooking);\r\n        } catch (error) {\r\n          console.error('Error fetching booking:', error);\r\n        }\r\n      }\r\n      fetchBooking();\r\n    }\r\n  }, [id, date]);\r\n  \r\n\r\n  const handleChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    if (index !== null) {\r\n      const updatedWorkTime = [...booking.workTime];\r\n      updatedWorkTime[index] = { ...updatedWorkTime[index], [name]: value };\r\n      setBooking({ ...booking, workTime: updatedWorkTime });\r\n      console.log('Updated work time at index', index, ':', updatedWorkTime);\r\n    } else {\r\n      setBooking({ ...booking, [name]: value });\r\n      console.log('Updated booking:', { ...booking, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleAddWorkTime = () => {\r\n    const newWorkTime = { time: '', slots: 0 };\r\n    setBooking(prevBooking => {\r\n      const updatedWorkTime = [...prevBooking.workTime, newWorkTime];\r\n      console.log('Added new work time:', newWorkTime);\r\n      return { ...prevBooking, workTime: updatedWorkTime };\r\n    });\r\n  };\r\n\r\n  const handleRemoveWorkTime = (index) => {\r\n    setBooking(prevBooking => {\r\n      const updatedWorkTime = prevBooking.workTime.filter((_, i) => i !== index);\r\n      console.log('Removed work time at index', index, ':', updatedWorkTime);\r\n      return { ...prevBooking, workTime: updatedWorkTime };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const requestBody = {\r\n      ...booking,\r\n      lang: lang,\r\n      levelName: level,\r\n      lessonTypes: lessonTypes\r\n    };\r\n    console.log('Submitting booking:', requestBody);\r\n    try {\r\n      await axios.put(`http://13.60.221.226/api/schools/${schoolId}/teachers/${teacherId}/dates`, requestBody);\r\n      console.log('Booking updated successfully');\r\n      navigate(`/${schoolId}/admin`);\r\n    } catch (error) {\r\n      console.error('Error updating booking:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BookingForm\r\n      booking={booking}\r\n      handleChange={handleChange}\r\n      handleAddWorkTime={handleAddWorkTime}\r\n      handleRemoveWorkTime={handleRemoveWorkTime}\r\n      handleSubmit={handleSubmit}\r\n      id={id}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditBookingForm;\r\n"],"names":["_ref","booking","handleChange","handleAddWorkTime","handleRemoveWorkTime","handleSubmit","id","formatDateTimeLocal","dateTimeString","date","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","_jsxs","className","children","_jsx","onSubmit","type","name","value","d","split","onChange","e","required","allSlots","workTime","map","item","index","time","slots","onClick","setBooking","useState","allNr","useParams","navigate","useNavigate","location","useLocation","state","lang","level","teacherId","lessonTypes","schoolId","useEffect","async","fetchBooking","console","log","normalizedBooking","toISOString","slice","error","BookingForm","target","updatedWorkTime","newWorkTime","prevBooking","filter","_","i","preventDefault","requestBody","levelName","axios","put"],"sourceRoot":""}