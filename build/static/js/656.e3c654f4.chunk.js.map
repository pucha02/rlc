{"version":3,"file":"static/js/656.e3c654f4.chunk.js","mappings":"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","sources":["common/components/LanguageSelection/LanguageSelection.jsx","common/utils/smallFn/convertDate.js","pages/choosePriority/choosePriority.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LogoImg from '../../../services/images/Group12.svg'\r\nimport Footer from '../Footer/Footer';\r\nimport '../../../pages/chooseLanguage/language.css'\r\n\r\nconst LanguageSelection = ({ title, data, type, language = null, level = null, schoolId = null, lessonTypes = null, count = null, allTeachers = null }) => {\r\n    return (\r\n        <>\r\n            <div className=\"main\">\r\n                <div className=\"container\">\r\n                    <div className='logo'>\r\n                        <div className='logo-items'>\r\n                            <Link to={`/${schoolId}`}><img src={LogoImg} alt=\"Logo\" /></Link>\r\n                            <div className='logo-name'>Мовна школа <span>EAGLES</span></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='container-items-block'>\r\n                        <h1 className=\"languages-title\">{title}</h1>\r\n                        {data && data.length > 0 ? (\r\n                            <div className=\"school-data\">\r\n                                {data.filter((item) => {\r\n                                    if (count >= 3) {\r\n                                        return item.typeName === 'Групові';\r\n                                    } else if (count === 2) {\r\n                                        return item.typeName === 'Парні' || item.typeName === 'Групові';\r\n                                    } else if (count === 1) {\r\n                                        return item.typeName === 'Парні' || item.typeName === 'Індивідуальні' || item.typeName === 'Групові';\r\n                                    }\r\n                                    return true;\r\n                                }).map((item, index) => (\r\n                                    <Link\r\n                                        replace\r\n                                        key={index}\r\n                                        className=\"language-link\"\r\n                                        to={type === 'language' ? `/course` : type === 'level' ? `/count` : type === 'type' ? `/priority` : type === 'count' ? `/lessoTypes` : type === 'priority' ? `/teacher` : ''}\r\n                                        state={\r\n                                            type === 'language' ? { level: item.level, language: item.lang, schoolId: schoolId }\r\n                                                : type === 'level' ? { level: item.levelName, language: language, lessonTypes: item.lessonTypes, schoolId: schoolId }\r\n                                                    : type === 'type' ? { level: level, language: language, lessonTypes: item.typeName, schoolId: schoolId, count: count }\r\n                                                        : type === 'count' ? { level: level, language: language, schoolId: schoolId } : ''\r\n                                        }\r\n                                    >\r\n                                        <div className=\"language-item\">\r\n                                            <p>\r\n                                                {type === 'language' ? item.lang\r\n                                                    : type === 'level' ? item.levelName\r\n                                                        : type === 'type' ? item.typeName : ''}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Link>\r\n                                ))}\r\n                            </div>\r\n                        ) : lessonTypes && !count ? (\r\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"normal\" }} className=\"school-data\">\r\n                                <div className='count-elements'>\r\n                                    <Link to={`/lessoTypes`} state={{ level: level, language: language, schoolId: schoolId, count: 1, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                        <div className=\"language-item count\">\r\n                                            <p>1</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <Link to={`/lessoTypes`} state={{ level: level, language: language, schoolId: schoolId, count: 2, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                        <div className=\"language-item count\">\r\n                                            <p>2</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <Link to={`/lessoTypes`} state={{ level: level, language: language, schoolId: schoolId, count: 3, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                        <div className=\"language-item count\">\r\n                                            <p>3</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <Link to={`/lessoTypes`} state={{ level: level, language: language, schoolId: schoolId, count: 4, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                        <div className=\"language-item count\">\r\n                                            <p>4</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <Link to={`/lessoTypes`} state={{ level: level, language: language, schoolId: schoolId, count: 5, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                        <div className=\"language-item count\">\r\n                                            <p>5</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <Link to={`/lessoTypes`} state={{ level: level, language: language, schoolId: schoolId, count: 6, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                        <div className=\"language-item count\">\r\n                                            <p>6</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        ) : lessonTypes && count ? (\r\n                            <div className=\"school-data\">\r\n\r\n                                <Link to={`/date`} state={{ level: level, lang: language, schoolId: schoolId, count: count, lessonTypes: lessonTypes, allTeachers: allTeachers }} className=\"language-link\">\r\n                                    <div className=\"language-item\">\r\n                                        <p>Обрати час</p>\r\n                                    </div>\r\n                                </Link>\r\n                                <Link to={`/teacher`} state={{ level: level, language: language, schoolId: schoolId, count: count, lessonTypes: lessonTypes }} className=\"language-link\">\r\n                                    <div className=\"language-item\">\r\n                                        <p>Обрати вчителя</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        ) : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LanguageSelection;\r\n","import { format } from 'date-fns';\r\nimport { toZonedTime  } from 'date-fns-tz';\r\nimport { uk } from 'date-fns/locale';\r\n\r\nfunction translateUkrainianMonthToEnglish(month) {\r\n    const months = {\r\n        \"січня\": \"January\",\r\n        \"лютого\": \"February\",\r\n        \"березня\": \"March\",\r\n        \"квітня\": \"April\",\r\n        \"травня\": \"May\",\r\n        \"червня\": \"June\",\r\n        \"липня\": \"July\",\r\n        \"серпня\": \"August\",\r\n        \"вересня\": \"September\",\r\n        \"жовтня\": \"October\",\r\n        \"листопада\": \"November\",\r\n        \"грудня\": \"December\"\r\n    };\r\n\r\n    return months[month];\r\n}\r\n\r\nfunction parseUkrainianDate(dateStr) {\r\n    const cleanedDateStr = dateStr.replace('р.', '').replace('о', '').trim();\r\n    \r\n    const [day, monthUkr, year, time, time2, time3] = cleanedDateStr.split(' ');\r\n   \r\n    const monthEng = translateUkrainianMonthToEnglish(monthUkr);\r\n\r\n    // const formattedDateStr = `${monthEng} ${day}, ${year} ${time3}.000+00:00`;\r\n    const formattedDateStr = `${monthEng} ${day}, ${year} ${time3}`;\r\n\r\n    return new Date(formattedDateStr).toUTCString();\r\n}\r\n\r\n\r\n\r\nconst formatDateToUkrainian = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    const day = date.getUTCDate();\r\n    const monthNames = ['січня', 'лютого', 'березня', 'квітня', 'травня', 'червня', 'липня', 'серпня', 'вересня', 'жовтня', 'листопада', 'грудня'];\r\n    const month = monthNames[date.getUTCMonth()];\r\n    const year = date.getUTCFullYear();\r\n    const hours = String(date.getUTCHours()).padStart(2, '0');\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, '0');\r\n  \r\n    return `${day} ${month} ${year} р. о ${hours}:${minutes}`;\r\n  };\r\n\r\nexport {parseUkrainianDate, formatDateToUkrainian};","import { useLocation } from \"react-router-dom\";\r\nimport LanguageSelection from \"../../common/components/LanguageSelection/LanguageSelection\";\r\nimport { parseUkrainianDate } from \"../../common/utils/smallFn/convertDate\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst ChoosePriority = () => {\r\n    const [allTeachers, setAllTeachers] = useState([])\r\n\r\n    const location = useLocation();\r\n    const { level } = location.state || {};\r\n    const { language } = location.state || {};\r\n    const { schoolId } = location.state || {};\r\n    const { lessonTypes } = location.state || {};\r\n    const { count } = location.state || {};\r\n\r\n    const selectedTimes = [];\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('selectedDates', []);\r\n        localStorage.setItem('OrderId', [])\r\n        fetchSchoolData()\r\n    }, [])\r\n\r\n    const fetchSchoolData = async () => {\r\n        try {\r\n            const response = await axios.get(`http://13.60.221.226/api/schools/${schoolId}`);\r\n            let teachers = response.data[0].ESL.teacher;\r\n\r\n            if (level) {\r\n                let parsedSelectedTimes = [];\r\n                if (typeof selectedTimes === 'string' && selectedTimes.length > 0) {\r\n                    try {\r\n                        // Parse selectedTimes from localStorage\r\n                        parsedSelectedTimes = JSON.parse(selectedTimes);\r\n                    } catch (e) {\r\n                        console.error('Invalid JSON string for selectedTimes:', e);\r\n                    }\r\n                }\r\n                // Ensure parsedSelectedTimes is always an array\r\n                if (!Array.isArray(parsedSelectedTimes)) {\r\n                    parsedSelectedTimes = [];\r\n                }\r\n                teachers = teachers.filter(teacher =>\r\n                    teacher.data &&\r\n                    teacher.data.lang.some(langObj =>\r\n                        langObj.level &&\r\n                        langObj.level.some(l =>\r\n                            l.levelName === level &&\r\n                            (langObj.lang === language) &&\r\n                            l.lessonTypes.some(lessonTypeObj =>\r\n                                lessonTypeObj.typeName === lessonTypes &&\r\n                                (parsedSelectedTimes.length === 0 ||\r\n                                    parsedSelectedTimes.some(selectedDate =>\r\n                                        lessonTypeObj.date.some(dateObj =>\r\n                                            dateObj.workTime.some(workTimeSlot =>\r\n                                                new Date(new Date(workTimeSlot.time).getTime() + new Date(workTimeSlot.time).getTimezoneOffset() * 60000).getTime() === new Date(new Date(parseUkrainianDate(selectedDate))).getTime() && workTimeSlot.slots > 0\r\n                                            )\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n\r\n            const allTeacherDates = teachers.flatMap(teacher =>\r\n                teacher.data.lang\r\n                    .filter(langObj => langObj.lang === language)\r\n                    .flatMap(langObj =>\r\n                        langObj.level\r\n                            .filter(lv => lv.levelName === level)\r\n                            .flatMap(lv => lv.lessonTypes.filter(lv => lv.typeName == lessonTypes)\r\n                                .flatMap(lv => lv.date)\r\n                            )\r\n\r\n                    )\r\n            );\r\n            console.log(allTeacherDates)\r\n            setAllTeachers(allTeacherDates);\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LanguageSelection\r\n            title=\"Оберіть Пріорітет\"\r\n            type=\"priority\"\r\n            language={language}\r\n            level={level}\r\n            schoolId={schoolId}\r\n            lessonTypes={lessonTypes}\r\n            count={count}\r\n            allTeachers={allTeachers}\r\n        />\r\n\r\n    );\r\n};\r\n\r\nexport default ChoosePriority;\r\n"],"names":["_ref","title","data","type","language","level","schoolId","lessonTypes","count","allTeachers","_jsxs","_Fragment","children","_jsx","className","Link","to","src","LogoImg","alt","length","filter","item","typeName","map","index","replace","state","lang","levelName","style","display","flexDirection","justifyContent","Footer","parseUkrainianDate","dateStr","cleanedDateStr","trim","day","monthUkr","year","time","time2","time3","split","monthEng","Date","toUTCString","formatDateToUkrainian","date","getUTCDate","getUTCMonth","getUTCFullYear","String","getUTCHours","padStart","getUTCMinutes","ChoosePriority","setAllTeachers","useState","location","useLocation","selectedTimes","useEffect","localStorage","setItem","fetchSchoolData","async","teachers","axios","get","ESL","teacher","parsedSelectedTimes","JSON","parse","e","console","error","Array","isArray","some","langObj","l","lessonTypeObj","selectedDate","dateObj","workTime","workTimeSlot","getTime","getTimezoneOffset","slots","allTeacherDates","flatMap","lv","log","LanguageSelection"],"sourceRoot":""}