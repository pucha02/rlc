{"version":3,"file":"static/js/529.2f31469d.chunk.js","mappings":"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","sources":["services/AdminPanel/teacher_schedule/AddBookingForm/AddBookingForm.js","services/AdminPanel/teacher_schedule/BookingForm/BookingForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport BookingForm from '../BookingForm/BookingForm';\r\n\r\nfunction AddBookingForm() {\r\n  const [bookingses, setBooking] = useState({ d: '', allSlots: 0, workTime: [] });\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { booking } = location.state || {};\r\n  const { lang } = location.state || {};\r\n  const { level } = location.state || {};\r\n  const { teacherId } = location.state || {};\r\n  const { lessonTypes } = location.state || {};\r\n  const { schoolId } = location.state || {};\r\n\r\n  const handleChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    if (index !== null) {\r\n      const updatedWorkTime = [...bookingses.workTime];\r\n      updatedWorkTime[index] = { ...updatedWorkTime[index], [name]: value };\r\n      setBooking({ ...bookingses, workTime: updatedWorkTime });\r\n    } else {\r\n      setBooking({ ...bookingses, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleAddWorkTime = () => {\r\n    setBooking({ ...bookingses, workTime: [...bookingses.workTime, { time: bookingses.d, slots: 0 }] });\r\n  };\r\n\r\n  const handleRemoveWorkTime = (index) => {\r\n    const updatedWorkTime = bookingses.workTime.filter((_, i) => i !== index);\r\n    setBooking({ ...bookingses, workTime: updatedWorkTime });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const requestBody = {\r\n      ...bookingses,\r\n      lang: lang,\r\n      levelName: level,\r\n      lessonTypes: lessonTypes\r\n    };\r\n\r\n    try {\r\n      const url = `http://13.60.221.226/api/schools/${schoolId}/teachers/${teacherId}/dateses`;\r\n      console.log('Submitting booking:', requestBody);\r\n      const response = await axios.put(url, requestBody);\r\n      console.log('Server response:', response.data);\r\n      navigate(`/${schoolId}/admin`);// Redirect back to the booking list after adding\r\n    } catch (error) {\r\n      console.error('Error saving booking:', error);\r\n      if (error.response) {\r\n        console.error('Response data:', error.response.data); // Log server response error\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BookingForm\r\n      booking={bookingses}\r\n      handleChange={handleChange}\r\n      handleAddWorkTime={handleAddWorkTime}\r\n      handleRemoveWorkTime={handleRemoveWorkTime}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddBookingForm;\r\n","import React from 'react';\r\nimport './BookingForm.css'; // Import the CSS file\r\n\r\nfunction BookingForm({ booking, handleChange, handleAddWorkTime, handleRemoveWorkTime, handleSubmit, id }) {\r\n  const formatDateTimeLocal = (dateTimeString) => {\r\n    if (!dateTimeString) return '';\r\n    const date = new Date(dateTimeString);\r\n    // Convert to local time, remove seconds and milliseconds for input value\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"booking-form-container\">\r\n      <h1 className=\"form-title\">{id ? 'Edit Booking' : 'Create Booking'}</h1>\r\n      <form onSubmit={handleSubmit} className=\"booking-form\">\r\n        <label className=\"form-label\">\r\n          Date:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"date\"\r\n            name=\"d\"\r\n            value={booking.d ? booking.d.split('T')[0] : ''}\r\n            onChange={(e) => handleChange(e, null)}\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          All Number:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"number\"\r\n            name=\"allSlots\"\r\n            value={booking.allSlots || 0}\r\n            onChange={(e) => handleChange(e, null)}\r\n            required\r\n          />\r\n        </label>\r\n        <div className=\"worktime-section\">\r\n          <h2 className=\"worktime-title\">Work Times</h2>\r\n          {booking.workTime && booking.workTime.map((item, index) => (\r\n            <div key={index} className=\"worktime-item\">\r\n              <label className=\"form-label\">\r\n                Time:\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"datetime-local\"\r\n                  name=\"time\"\r\n                  value={formatDateTimeLocal(item.time)}\r\n                  onChange={(e) => handleChange(e, index)}\r\n                  required\r\n                />\r\n              </label>\r\n              <label className=\"form-label\">\r\n                Number:\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  name=\"slots\"\r\n                  value={item.slots || 0}\r\n                  onChange={(e) => handleChange(e, index)}\r\n                  required\r\n                />\r\n              </label>\r\n              <button type=\"button\" className=\"remove-btn\" onClick={() => handleRemoveWorkTime(index)}>\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" className=\"add-btn\" onClick={handleAddWorkTime}>\r\n            Add Work Time\r\n          </button>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">{id ? 'Update' : 'Create'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingForm;\r\n"],"names":["bookingses","setBooking","useState","d","allSlots","workTime","navigate","useNavigate","location","useLocation","booking","state","lang","level","teacherId","lessonTypes","schoolId","_jsx","BookingForm","handleChange","e","index","name","value","target","updatedWorkTime","handleAddWorkTime","time","slots","handleRemoveWorkTime","filter","_","i","handleSubmit","async","preventDefault","requestBody","levelName","url","console","log","response","axios","put","data","error","_ref","id","formatDateTimeLocal","dateTimeString","date","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","_jsxs","className","children","onSubmit","type","split","onChange","required","map","item","onClick"],"sourceRoot":""}